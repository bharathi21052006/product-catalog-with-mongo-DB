// Simple Product Catalog using Node.js and MongoDB

const express = require("express");
const mongoose = require("mongoose");

const app = express();
app.use(express.json());
app.use(express.static("public"));


// Connect to MongoDB (make sure MongoDB is running)
mongoose.connect("mongodb://localhost:27017/productCatalog")
  .then(() => console.log("✅ Connected to MongoDB"))
  .catch(err => console.log("❌ MongoDB Error:", err));

// Define Product Schema
const ProductSchema = new mongoose.Schema({
  name: String,
  price: Number,
  description: String
});

// Create Model
const Product = mongoose.model("Product", ProductSchema);

// Routes
app.get("/", (req, res) => {
  res.send("Welcome to the Product Catalog API!");
});

// Create a product
app.post("/products", async (req, res) => {
  const product = new Product(req.body);
  await product.save();
  res.send(product);
});

// Get all products
app.get("/products", async (req, res) => {
  const products = await Product.find();
  res.send(products);
});

// Get one product by ID
app.get("/products/:id", async (req, res) => {
  const product = await Product.findById(req.params.id);
  res.send(product);
});

// Update a product
app.put("/products/:id", async (req, res) => {
  const product = await Product.findByIdAndUpdate(req.params.id, req.body, { new: true });
  res.send(product);
});

// Delete a product
app.delete("/products/:id", async (req, res) => {
  await Product.findByIdAndDelete(req.params.id);
  res.send({ message: "Product deleted" });
});

// Start Server
app.listen(3000, () => console.log("🚀 Server running on http://localhost:3000"));
